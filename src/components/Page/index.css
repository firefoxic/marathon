@property --Breakpoint_range_min {
	syntax: "<length>";
	inherits: false;
	initial-value: 320px;
}

@property --Breakpoint_range_max {
	syntax: "<length>";
	inherits: false;
	initial-value: 1024px;
}

@property --Content-Area_max {
	syntax: "<length>";
	inherits: false;
	initial-value: 1400px;
}

@property --Content-Area_range_min {
	syntax: "<length>";
	inherits: false;
	initial-value: 280px;
}

@property --Content-Area_range_max {
	syntax: "<length>";
	inherits: false;
	initial-value: 940px;
}

@property --Content-Area_inline_size {
	syntax: "<length>";
	inherits: true;
	initial-value: 280px;
}

@property --Viewport_inline-size {
	syntax: "<length>";
	inherits: false;
	initial-value: 100vi;
}

:root {
	container-name: root;
	container-type: size;
	min-block-size: 100svb;
}

.Page {
	margin: initial;
	min-block-size: 100svb;
	display: block grid;
	grid-template-rows: auto 1fr;
}

.Page-Centerer {
	--Breakpoint_range_min: 20rem;
	--Breakpoint_range_max: 64rem;
	--Content-Area_max: 87.5rem;
	--Content-Area_range_min: 17.5rem;
	--Content-Area_range_max: 58.75rem;

	--Content-Area_inline-size:
		min(
			var(--Content-Area_max),
			var(--Content-Area_range_min)
			+
			(var(--Viewport_inline-size) - var(--Breakpoint_range_min))
			*
			tan(atan2((var(--Content-Area_range_max) - var(--Content-Area_range_min)), 1px))
			/
			tan(atan2((var(--Breakpoint_range_max) - var(--Breakpoint_range_min)), 1px))
		);
	margin-inline: auto;
	inline-size: var(--Content-Area_inline-size);
}

.Page-Header {
	display: block grid;
}

.Page-Footer {
	display: block grid;
}

.Page-Content {
	display: block grid;
	align-self: start;
	align-content: start;
}

@property --Layout-Gap {
	syntax: "<length>";
	inherits: true;
	initial-value: 20px;
}

@property --Layout-Column_size_min {
	syntax: "<length>";
	inherits: false;
	initial-value: 280px;
}

@property --Layout-Column_count {
	syntax: "<integer>";
	inherits: true;
	initial-value: 1;
}

.Page-Layout {
	--Layout-Gap: 1rlh;
	--Layout-Column_size_min: 17.5rem;
	--Layout-Column_count:
		round(
			up,
			tan(atan2(max(1px, (var(--Content-Area_inline-size) - var(--Layout-Column_size_min))), 1px))
			/
			tan(atan2((var(--Layout-Gap) + var(--Layout-Column_size_min)), 1px)),
			1
		);
	display: block grid;
	grid-template-columns: repeat(auto-fill, minmax(min(100%, var(--Layout-Column_size_min)), 1fr));
	gap: var(--Layout-Gap);
	padding-block: 2.25em 4.5em;

	@container root (width >= 80em) {
		padding-block-end: 3.75em;
	}
}
